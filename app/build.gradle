import java.util.regex.Matcher
import java.util.regex.Pattern

apply plugin: 'com.android.application'


apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdk 34
    buildToolsVersion = "34.0.0"
    buildFeatures {
        buildConfig = true
    }

    allprojects {repositories {maven { url 'https://maven.aliyun.com/repository/jcenter' }}}
    defaultConfig {
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        versionName "3.1"
        minSdkVersion 19
        targetSdk 30
        applicationId 'criminal.russia'
        versionNameSuffix "-criminal.russia-" + versionName
        versionCode 29
        multiDexEnabled true
        ndk {
            //noinspection ChromeOsAbiSupport
            abiFilters "armeabi-v7a" //32Ñ…
        }
    }

    buildTypes {
        release {
            firebaseCrashlytics {
                nativeSymbolUploadEnabled true
                strippedNativeLibsDir 'src/main/jniLibs/'
                unstrippedNativeLibsDir 'src/main/jniLibs/'
            }

            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        debug {
            signingConfig signingConfigs.debug
            jniDebuggable true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    namespace 'criminal.russia'
    lint {
        abortOnError false
        checkReleaseBuilds false
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'com.google.firebase:firebase-config:21.0.2'
    def work_version = "2.4.0"
    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation "androidx.work:work-rxjava2:$work_version"
    implementation "androidx.work:work-gcm:$work_version"
    androidTestImplementation "androidx.work:work-testing:$work_version"
    implementation("com.google.guava:guava:29.0-jre")
    api("com.google.guava:guava:29.0-jre")
    implementation("com.google.guava:guava:29.0-android")
    api("com.google.guava:guava:29.0-android")
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'

    implementation 'com.mikhaellopez:circularprogressbar:3.1.0'

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // -- SDP
    implementation 'com.intuit.sdp:sdp-android:1.0.6'

    // -- FireBase
    implementation platform('com.google.firebase:firebase-bom:29.0.3')
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-crashlytics-ndk'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-database'
    implementation 'com.google.firebase:firebase-perf'

    implementation group: 'commons-io', name: 'commons-io', version: '2.6'

    // -- Stories
    implementation 'com.github.shts:StoriesProgressView:3.0.0'

    // -- Downloader
    implementation 'com.github.amitshekhariitbhu:PRDownloader:1.0.1'

    // -- 7z
    implementation 'com.github.hanks-zyh.HTextView:htextview-base:93d8d0d6f3'

// -- For speedometer
    implementation 'com.github.Triggertrap:SeekArc:v1.1'

    // -- For settings
    implementation 'com.github.dinuscxj:CircleProgressBar:83e42d5f5c'
    implementation "com.github.skydoves:colorpickerview:2.2.3"
    implementation 'com.github.hzy3774:AndroidP7zip:v1.7.2'
    implementation group: 'org.ini4j', name: 'ini4j', version: '0.5.4'


    // -- For loading
    implementation 'com.akexorcist:round-corner-progress-bar:2.1.2'
    implementation 'com.tuyenmonkey:mkloader:1.4.0'

    // -- For reCAPTCHA
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'com.google.android.gms:play-services-safetynet:17.0.1'

    // implementation 'net.lingala.zip4j:zip4j:1.3.2'
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    implementation 'commons-io:commons-io:2.13.0'

    implementation "androidx.recyclerview:recyclerview:1.2.1"

    implementation 'com.loopj.android:android-async-http:1.4.10'


    implementation 'com.akexorcist:round-corner-progress-bar:2.2.0'
    implementation 'com.liulishuo.filedownloader:library:1.7.7'
    implementation 'com.makeramen:roundedimageview:2.3.0'
    implementation "com.liulishuo.okdownload:okdownload:1.0.3"
    //implementation 'net.lingala.zip4j:zip4j:1.3.2'
    implementation 'com.mikhaellopez:circularprogressbar:3.1.0'
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.github.GrenderG:Toasty:1.5.2'
}

task deployBrilliantApk(type: Copy) {
    outputs.upToDateWhen { false }
    from "$projectDir\\build\\outputs\\apk\\brilliant\\release"
    into "$projectDir\\..\\..\\result\\brilliant\\" + android.defaultConfig.versionName
    include "*.apk"
}

android.applicationVariants.all { variant ->
    variant.outputs.all {
        outputFileName = "${variant.versionName}.apk"
    }
    variant.assembleProvider.configure { assemble ->
        assemble.doLast {
            delete "$projectDir\\..\\..\\result\\brilliant\\"

            copy {
                from variant.outputs*.outputFile
                into "$projectDir\\..\\..\\result\\brilliant\\"
            }

            //copy {
            //    from "$projectDir\\..\\..\\libs\\obj\\local\\armeabi-v7a\\"
            //    into "$projectDir\\..\\..\\result\\fuss\\"
            //    include "*.so"
            //}
        }
    }
}